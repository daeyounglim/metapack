trial
as.integer(trial)
trial_labels
groups_
group_labels
scale_x
verbose
cholesterol$trt
library(metapack)
out <- synthesize(pldlc + phdlc + ptg | sdldl + sdhdl + sdtg ~
0 + bldlc + bhdlc + btg + age + durat + white + male + dm + ns(Npt) | trt | trt + Trial + onstat, data = cholesterol, control=list(model="NoRecovery", scale_x = TRUE, verbose=TRUE))
help(synthesize)
devtools::document()
library(metapack)
help(synthesize)
help(bayes.parobs)
devtools::document()
library(metapack)
devtools::document()
library(metapack)
help("synthesize")
library(metapack)
library(metapack)
devtools::document()
library(metapack)
help("synthesize")
devtools::document()
devtools::document()
library(metapack)
help("synthesize")
library(metapack)
devtools::document()
library(metapack)
help("synthesize")
devtools::document()
library(metapack)
help("synthesize")
devtools::document()
library(metapack)
help("synthesize")
devtools::document()
library(metapack)
help("synthesize")
devtools::document()
devtools::document()
library(metapack)
help(synthesize)
devtools::document()
library(metapack)
help(synthesize)
devtools::document()
library(metapack)
help(synthesize)
devtools::document()
library(metapack)
help(synthesize)
devtools::document()
library(metapack)
help(synthesize)
devtools::document()
library(metapack)
help(synthesize)
citation("Formula")
devtools::document()
devtools::document()
library(metapack)
help(synthesize)
devtools::document()
library(metapack)
help(synthesize)
library(metapack)
library(metapack)
devtools::document()
devtools::document()
library(metapack)
library(metapack)
devtools::document()
library(metapack)
help(synthesize)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(metapack)
help(synthesize)
devtools::document()
library(metapack)
devtools::document()
library(metapack)
help(synthesize)
devtools::document()
library(metapack)
help(synthesize)
devtools::document()
library(metapack)
help(synthesize)
devtools::document()
library(metapack)
devtools::document()
library(metapack)
devtools::document()
devtools::document()
devtools::document()
library(metapack)
help("synthesise")
devtools::document()
library(metapack)
help("synthesise")
devtools::document()
library(metapack)
help("synthesise")
devtools::document()
library(metapack)
help("synthesise")
help(model.extract)
data(TNM)
str(TNM)
help(match)
match(TNM$Treat, c("PBO", "R"), nomatch = "NONE")
match(TNM$Treat, c("PBO", "R"), nomatch = 0)
TNM$group <- factor(match(TNM$Treat, c("PBO", "R"), nomatch = 0))
TNM$group
help("scale")
f_2 <- 'ptg | sdtg ~
0 + bldlc + bhdlc + btg + age + white + male + bmi +
potencymed + potencyhigh + durat + ns(Npt) |
scale(bldlc) + scale(btg) + group | Treat  + Trial'
out_2 <- synthesize(as.formula(f_2), data = TNM,
prior = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(scale_x = TRUE, verbose=TRUE))
out_2 <- synthesize(as.formula(f_2), data = TNM,
prior = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(scale_x = TRUE, verbose=TRUE))
y
library(metapack)
out_2 <- synthesize(as.formula(f_2), data = TNM,
prior = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(scale_x = TRUE, verbose=TRUE))
std_dev
str(std_dev)
str(y)
std_dev[2]
library(metapack)
out_2 <- synthesize(as.formula(f_2), data = TNM,
prior = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(scale_x = TRUE, verbose=TRUE))
out_2 <- synthesize(as.formula(f_2), data = TNM,
prior = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(scale_x = TRUE, verbose=TRUE))
View(ZCovariate)
TNM$group
help(factor)
devtools::document()
library(metapack)
out_2 <- synthesize(as.formula(f_2), data = TNM,
prior = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(scale_x = TRUE, verbose=TRUE))
synthesize
out_2 <- synthesize(as.formula(f_2), data = TNM,
prior = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(scale_x = TRUE, verbose=TRUE))
library(metapack)
out_2 <- synthesize(as.formula(f_2), data = TNM,
prior = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(scale_x = TRUE, verbose=TRUE))
library(metapack)
out_2 <- synthesize(as.formula(f_2), data = TNM,
prior = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(scale_x = TRUE, verbose=TRUE))
Trial.n
K
XCovariate_
nx
nT
unique(Treat)
Trial.n
library(metapack)
out_2 <- synthesize(as.formula(f_2), data = TNM,
prior = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(scale_x = TRUE, verbose=TRUE))
Xk
idx
length(Treat.n)
Treat.n
Treat_order
Treat.order
relabel.vec(Treat, Treat.order)
Treat
library(metapack)
out_2 <- synthesize(as.formula(f_2), data = TNM,
prior = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(scale_x = TRUE, verbose=TRUE))
factor(TNM$Treat)
inherit(factor(TNM$Treat), "factor"
)
inherits(factor(TNM$Treat), "factor")
check.numeric
library(metapack)
out_2 <- synthesize(as.formula(f_2), data = TNM,
prior = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(scale_x = TRUE, verbose=TRUE))
library(metapack)
out_2 <- synthesize(as.formula(f_2), data = TNM,
prior = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(scale_x = TRUE, verbose=TRUE))
Treat.n
Treat
str(Treat)
Trial.order
Treat.order
TNM$Treat
library(metapack)
out_2 <- synthesize(as.formula(f_2), data = TNM,
prior = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(scale_x = TRUE, verbose=TRUE))
treat
as.character()
as.character(treat)
is.factor(treat)
treat_ <- factor(treat)
treat_
levels(treat_)
treat_ <- as.character(treat_)
treat_
help("is.element")
inherits("fdfd", "factor")
library(metapack)
out_2 <- synthesize(as.formula(f_2), data = TNM,
prior = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(scale_x = TRUE, verbose=TRUE))
library(metapack)
out_2 <- synthesize(as.formula(f_2), data = TNM,
prior = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(scale_x = TRUE, verbose=TRUE))
treat
unfactor(treat)
library(metapack)
out_2 <- synthesize(as.formula(f_2), data = TNM,
prior = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(scale_x = TRUE, verbose=TRUE))
treat
unfactor(treat)
treat_ <- factor(treat)
nlevels(treat_)
treat_ <- unfactor(treat_)
treat_
relabel.vec(treat_, levels(factor(treat_)))
library(metapack)
out_2 <- synthesize(as.formula(f_2), data = TNM,
prior = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(scale_x = TRUE, verbose=TRUE))
Treat.n
Treat
Treat.order
get(mf, envir=parent.frame())
Trial
Treat
devtools::document()
library(metapack)
out_2 <- synthesize(as.formula(f_2), data = TNM,
prior = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(scale_x = TRUE, verbose=TRUE))
devtools::document()
library(metapack)
out_2 <- synthesize(as.formula(f_2), data = TNM,
mcmc = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(scale_x = TRUE, verbose=TRUE))
out_2$mcmc.draws
devtools::document()
library(metapack)
devtools::document()
library(metapack)
library(metapack)
devtools::document()
devtools::document()
library(metapack)
help(synthesize)
devtools::document()
library(metapack)
help(synthesize)
devtools::document()
devtools::document()
library(metapack)
set.seed(2797542)
data("cholesterol")
f_1 <- 'pldlc + phdlc + ptg | sdldl + sdhdl + sdtg ~ 0 + bldlc + bhdlc + btg +
age + durat + white + male + dm + ns(Npt) | trt | trt + Trial + onstat'
out_1 <- bsynthesize(as.formula(f_1), data = cholesterol,
mcmc = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(model="NoRecovery", scale_x = TRUE, verbose=FALSE))
out_1
print.lm
methods(print)
help(methods)
getS3method("print", "lm")
lm
help(match.call)
devtools::document()
library(metapack)
out_1 <- bsynthesize(as.formula(f_1), data = cholesterol,
mcmc = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(model="NoRecovery", scale_x = TRUE, verbose=FALSE))
out_1
library(metapack)
out_1
summary(out_1)
library(metapack)
summary(out_1)
library(metapack)
summary(out_1)
library(metapack)
summary(out_1)
install.packages("badgecreatr")
cranbadge(“badgecreatr”)
library(badgecreatr)
cranbadge("metapack")
??badgecreatr
badge_cran("metapack")
devtools::document()
devtools::document()
devtools::check_win_oldrelease()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
library(metapack)
help(meta_analyze)
devtools::check_win_oldrelease()
devtools::document()
devtools::document()
library(metapack)
devtools::check_win_oldrelease()
devtools::document()
devtools::check_win_oldrelease()
library(metapack)
set.seed(2797542)
data("cholesterol")
f_1 <- 'pldlc + phdlc + ptg | sdldl + sdhdl + sdtg ~ 0 + bldlc + bhdlc + btg +
age + durat + white + male + dm + ns(Npt) | trt | trt + Trial + onstat'
out_1 <- meta_analyze(as.formula(f_1), data = cholesterol,
mcmc = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(model="NoRecovery", scale_x = TRUE, verbose=FALSE))
out_1 <- meta_analyze(f_1, data = cholesterol,
mcmc = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(model="NoRecovery", scale_x = TRUE, verbose=FALSE))
library(metapack)
out_1 <- meta_analyze(as.formula(f_1), data = cholesterol,
mcmc = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(model="NoRecovery", scale_x = TRUE, verbose=FALSE))
onstat
groups_
cholesterol$onstat
group_labels
check.numeric(groups_)
relabel.vec(groups_, group_labels)
library(metapack)
out_1 <- meta_analyze(as.formula(f_1), data = cholesterol,
mcmc = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(model="NoRecovery", scale_x = TRUE, verbose=FALSE))
library(metapack)
out_1 <- meta_analyze(as.formula(f_1), data = cholesterol,
mcmc = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(model="NoRecovery", scale_x = TRUE, verbose=FALSE))
ggroups
groups
group_labels
relabel.vec(groups_, group_labels)
groups_
group_labels
mf
last_part
last_vars
if (length(last_vars) == 3) TRUE else FALSE
tmp <- if (length(last_vars) == 3) TRUE else FALSE
tmp
tmp <- ifelse(length(last_vars) == 3, TRUE, FALSE)
tmp
mf[,ncol(mf)]
cholesterol$onstat
groups_
groups
unfactor(groups)
groups_ <- factor(groups)
groups_
groups_ <- unfactor(groups_)
groups_
groups_ <- factor(groups)
groups_
as.character(groups_)
unfactor(groups_)
groups_
as.numeric(groups_)
library(metapack)
out_1 <- meta_analyze(as.formula(f_1), data = cholesterol,
mcmc = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(model="NoRecovery", scale_x = TRUE, verbose=FALSE))
groups_
group_labels
relabel.vec(groups_, group_labels)
group_labels
as.numeric(group_labels)
out_1 <- meta_analyze(as.formula(f_1), data = cholesterol,
mcmc = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(model="NoRecovery", scale_x = TRUE, verbose=FALSE))
treat_
treatment_labels
trial_
trial_labels
devtools::document()
library(metapack)
devtools::check_win_oldrelease()
citation("Formula")
devtools::document()
help(meta_analyze)
devtools::document()
help(meta_analyze)
devtools::document()
help(meta_analyze)
help(match.arg)
Rho_init <- diag(3) # assume 3 by 3
Rho_init[upper.tri(Rho_init)] <-
Rho_init[lower.tri(Rho_init)] <- 0.5
Rho_init
help(coef)
x <- 1:5; coef(lm(c(1:3, 7, 6) ~ x))
methods(coef)
help("coef.default")
help("coef.nls")
??coef.nls
help("coef.default")
file.path(R.home("doc"), "KEYWORDS")
devtools::document()
help(meta_analyze)
devtools::document()
help(meta_analyze)
library(metapack)
help(meta_analyze)
devtools::document()
library(metapack)
help("bayes.nmr")
help(coef)
devtools::document()
library(metapack)
help("hpd.bayes.parobs")
devtools::document()
devtools::document()
help("coef")
library(metapack)
help("coef.bsynthesis")
devtools::document()
library(metapack)
library(metapack)
set.seed(2797542)
data("cholesterol")
data("TNM")
TNM$group <- factor(match(TNM$Treat, c("PBO", "R"), nomatch = 0))
f_2 <- 'ptg | sdtg ~
0 + bldlc + bhdlc + btg + age + white + male + bmi +
potencymed + potencyhigh + durat + ns(Npt) | Treat  + Trial'
out_2 <- meta_analyze(formula(f_2), data = TNM,
mcmc = list(ndiscard = 1, nskip = 1, nkeep = 1),
control=list(scale_x = TRUE, verbose=TRUE))
library(metapack)
out_2 <- meta_analyze(formula(f_2), data = TNM,
mcmc = list(ndiscard = 5000, nskip = 1, nkeep = 5000),
control=list(scale_x = TRUE, verbose=TRUE))
coef(out_2)
class(out_2)
library(metapack)
coef(out_2)
library(tools)
checkRdaFiles()
checkRdaFiles("data/cholesterol.rda")
checkRdaFiles("data/TNM.rda")
library(usethis)
library(metapack)
data(TNM)
TNM$trial <- TNM$Trial
TNM$treat <- TNM$Treat
TNM$Trial <- NULL
TNM$Treat <- NULL
str(TNM)
TNM$n <- TNM$Npt
TNM$Npt <- NULL
TNM[,c("trial", "treat","n")]
colnames(TNM)
TNM <- TNM[,c("treat", "trial", "n", "ptg", "sdtg", "bldlc", "bhdlc", "btg", "age", "white", "male", "bmi", "potencymed", "potencyhigh", "durat")]
use_data(TNM)
use_data(TNM, overwrite=TRUE)
data("cholesterol")
str(cholesterol)
cholesterol$study <- cholesterol$Study
cholesterol$Study <- NULL
cholesterol$treat <- cholesterol$trt
cholesterol$trt <- NULL
cholesterol$trial <- cholesterol$Trial
cholesterol$Trial <- NULL
colnames(cholesterol)
cholesterol$n <- cholesterol$Npt
cholesterol$Npt <- NULL
colnames(cholesterol)
cholesterol <- cholesterol[,c("study", "treat", "trial", "n", "pldlc", "phdlc", "ptg", "sdldl", "sdhdl", "sdtg", "onstat", "bldlc", "bhdlc", "btg", "age", "durat", "white", "male", "dm")]
str(cholesterol)
cholesterol$study
use_data(cholesterol, overwrite = TRUE)
devtools::document()
library(metapack)
devtools::document()
install.packages(c("Rcpp","RcppArmadillo","Formula", "RcppProgress","BH", "ggplot2", "gridExtra"))
install.packages(c("Rcpp", "RcppArmadillo", "Formula", "RcppProgress", "BH", "ggplot2", "gridExtra"))
devtools::document()
